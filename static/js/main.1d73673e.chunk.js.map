{"version":3,"sources":["logo.svg","Covid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","curr","setCurr","getDetails","a","fetch","resp","json","respdata","data","statewise","console","log","useEffect","className","map","ele","index","state","active","deaths","recovered","lastupdatedtime","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,I,0CCiEAA,EAhED,WAAK,IAAD,EACQC,mBAAS,IADjB,mBACRC,EADQ,KACHC,EADG,OAEGF,mBAAS,GAFZ,mBAIRG,GAJQ,UAIE,uCAAG,gCAAAC,EAAA,sEAEH,yCAFG,SAGIC,MADP,0CAFG,cAGTC,EAHS,gBAIQA,EAAKC,OAJb,OAITC,EAJS,OAKTC,EAAOD,EAASE,UACtBR,EAAQO,GANO,kDAaXE,QAAQC,IAAR,MAbW,0DAAH,sDAsBhB,OAJJC,qBAAU,WACNV,MAEF,IAEF,mCACA,sBAAKW,UAAU,OAAf,UACA,kFACA,oBAAGA,UAAU,UAAb,0BAAoC,uCAE7Bb,EAAKc,KAAI,SAACC,EAAIC,GAAL,OACN,mCAEF,oBAAGH,UAAU,OAAb,cAAmCG,EAAnC,IAA2CD,EAAIE,MAA/C,yBAAkEF,EAAIG,OAAtE,yBAA0FH,EAAII,OAA9F,4BAAqHJ,EAAIK,UAAzH,gCAAuJL,EAAIM,gBAA3J,MAAyBN,EAAIO,eCxBtBC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACJ,cAAC,EAAD,OCKeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d73673e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\r\nconst Covid = ()=>{\r\n    const[curr,setCurr] = useState([]);\r\n    const [sn,setSn]=useState(1);\r\n\r\n    const getDetails = async()=>{\r\n        try{\r\n        const url = 'https://api.covid19india.org/data.json';\r\n        const resp = await fetch(url);\r\n        const respdata = await resp.json();\r\n        const data = respdata.statewise;\r\n        setCurr(data);\r\n      \r\n        // console.log(data.statewise)\r\n        // setCurr(data);\r\n        }\r\n        catch(err)\r\n        {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\nuseEffect(()=>{\r\n    getDetails();\r\n\r\n},[]);\r\n    return(\r\n<>\r\n<div className=\"data\">\r\n<h1>üî¥ Covid Tracker in INDIA üö©</h1>\r\n<p className=\"creater\">Powered by : <b>GKG</b></p>\r\n\r\n      {curr.map((ele,index) => (\r\n          <>\r\n\r\n        <p className=\"list\" key={ele.id}> {index} {ele.state} | Activeüü¢ {ele.active} | Deathsüî¥ {ele.deaths} | Recoveredüü° {ele.recovered} lastupdatedtime‚è≤Ô∏è {ele.lastupdatedtime} </p>\r\n  \r\n        </>\r\n      )\r\n      \r\n      )\r\n      }\r\n    </div>\r\n\r\n    \r\n{/* <h1>Covid19 Tracker üî¥</h1>\r\n<h1>State: {curr.state}</h1>\r\n<h1>Active: {curr.active}</h1>\r\n<h1>Recovered: {curr.recovered}</h1>\r\n<h1>Death: {curr.deaths}</h1>\r\n<p>Last Update : {curr.lastupdatedtime}</p> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</>\r\n\r\n    )\r\n\r\n}\r\nexport default Covid;","import logo from './logo.svg';\nimport './App.css';\nimport Covid from './Covid'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<Covid/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}